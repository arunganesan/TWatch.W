package edu.umich.eecs.twatchw;

import android.content.Context;
import android.media.AudioFormat;
import android.media.AudioManager;
import android.media.AudioTrack;
import android.util.Log;
import android.widget.Toast;

/**
 * Created by Arun on 11/21/2014.
 */
public class Player {
    public static final short [] CHIRPFORWARD = new short [] {32767, 31443, 27569, 21448, 13565, 4558, -4839, -13853, -21737, -27829, -31612, -32757, -31154, -26923, -20409, -12152, -2846, 6717, 15723, 23391, 29052, 32206, 32565, 30084, 24965, 17645, 8756, -921, -10534, -19224, -26211, -30859, -32738, -31665, -27720, -21250, -12830, -3223, 6696, 16014, 23868, 29520, 32435, 32324, 29185, 23298, 15203, 5656, -4442, -14135, -22492, -28705, -32167, -32529, -29741, -24059, -16022, -6406, 3854, 13751, 22306, 28664, 32183, 32497, 29561, 23653, 15354, 5490, -4944, -14893, -23338, -29409, -32469, -32191, -28587, -22015, -13143, -2888, 7685, 17468, 25427, 30713, 32753, 31315, 26536, 18912, 9247, -1426, -11962, -21219, -28185, -32091, -32495, -29337, -22949, -14019, -3525, 7375, 17471, 25631, 30933, 32767, 30911, 25558, 17300, 7063, -3994, -14611, -23567, -29824, -32647, -31694, -27058, -19264, -9208, 1940, 12878, 22313, 29124, 32491, 31999, 27689, 20061, 10014, -1250, -12381, -22029, -29016, -32480, -31983, -27569, -19762, -9510, 1931, 13149, 22749, 29527, 32625, 31639, 26674, 18340, 7676, -3975, -15138, -24385, -30528, -32764, -30790, -24843, -15675, -4461, 7347, 18214, 26714, 31721, 32563, 29111, 21804, 11595, -169, -11927, -22105, -29333, -32625, -31522, -26153, -17232, -5955, 6149, 17428, 26333, 31629, 32571, 29012, 21426, 10852, -1247, -13189, -23298, -30147, -32756, -30741, -24369, -14527, -2603, 9708, 20645, 28632, 32507, 31695, 26294, 17071, 5351, -7163, -18646, -27409, -32152, -32161, -27414, -18598, -7007, 5643, 17466, 26687, 31912, 32338, 27883, 19200, 7594, -5183, -17185, -26574, -31899, -32326, -27771, -18919, -7124, 5792, 17821, 27084, 32117, 32116, 27062, 17733, 5587, -7458, -19334, -28144, -32468, -31597, -25650, -15568, -2960, 10140, 21613, 29585, 32743, 30554, 23356, 12314, -769, -13741, -24454, -31124, -32625, -28689, -19953, -7864, 5560, 18064, 27534, 32356, 31695, 25644, 15214, 2173, -11255, -22767, -30374, -32747, -29460, -21060, -8990, 4660, 17512, 27313, 32332, 31668, 25419, 14669, 1307, -12302, -23736, -30947, -32630, -28462, -19173, -6419, 7508, 20093, 29045, 32723, 30439, 22589, 10591, -3364, -16717, -27000, -32301, -31620, -25063, -13831, -5, 13837, 25100, 31657, 32256, 26763, 16198, 2547, -11602, -23556, -31022, -32555, -27842, -17766, -4253, 10095, 22505, 30558, 32673, 28417, 18601, 5130, -9363, -22029, -30362, -32701, -28562, -18744, -5185, 9423, 22163, 30474, 32672, 28294, 18203, 4419, -10275, -22897, -30871, -32554, -27581, -16949, -2824, 11896, 24178, 31473, 32252, 26333, 14927, 394, -14236, -25898, -32134, -31612, -24422, -12062, 2866, 17202, 27891, 32644, 30426, 21688, 8286, -6912, -20635, -29915, -32727, -28440, -17965, -3564, 11629, 24293, 31642, 32043, 25386, 13119, -2062, -16802, -27824, -32662, -30218, -21014, -7094, 8433, 22079, 30759, 32497, 26879, 15155, -26, -15216, -26947, -32523, -30646, -21725, -7791, 7952, 21873, 30740, 32476, 26657, 14617, -850, -16134, -27647, -32670, -30001, -20246, -5692, 10225, 23729, 31597, 31936, 24642, 11438, -4523, -19412, -29637, -32715, -27880, -16279, -713, 15041, 27142, 32619, 30111, 20211, 5330, -10877, -24415, -31924, -31526, -23295, -9258, 7100, 21700, 30880, 32319, 25634, 12484, -3828, -19188, -29699, -32678, -27345, -15035, 1126, 17015, 28554, 32767, 28546, 16957, 974, -15275, -27576, -32717, -29339, -18299, -2462, 14033, 26859, 32631, 29806, 19106, 3340, -13325, -26465, -32574, -30000, -19408, -3610, 13169, 26425, 32577, 29946, 19217, 3274, -13571, -26742, -32640, -29635, -18525, -2329, 14519, 27390, 32726, 29032, 17306, 774, -15987, -28317, -32766, -28070, -15519, 1392, 17928, 29434, 32655, 26657, 13113, -4159, -20266, -30621, -32257, -24683, -10041, 7490, 22887, 31712, 31405, 22028, 6271, -11316, -25633, -32506, -29911, -18580, -1804, 15513, 28292, 32760, 27578, 14250, -3303, -19892, -30591, -32201, -24219, -9002, 8919, 24184, 32204, 30549, 19691, 2883, -14810, -28034, -32763, -27540, -13926, 3945, 20627, 31008, 31888, 22972, 6979, -11178, -25898, -32617, -29231, -16765, 926, 18343, 30048, 32365, 24544, 9013, -9364, -24806, -32435, -29816, -17755, -52, 17681, 29801, 32428, 24698, 9058, -9496, -25018, -32503, -29521, -17006, 1017, 18726, 30372, 32154, 23468, 7119, -11568, -26484, -32728, -28226, -14434, 4126, 21339, 31508, 31245, 20614, 3120, -15425, -28840, -32628, -25497, -9811, 9181, 25100, 32572, 29053, 15706, -2971, -20655, -31332, -31349, -20674, -2928, 15833, 29182, 32520, 24676, 8324, -10913, -26392, -32744, -27743, -13100, 6113, 23210, 32216, 29960, 17205, -1596, -19851, -31130, -31438, -20639, -2529, 16490, 29670, 32308, 23439, 6200, -13268, -28000, -32703, -25664, -9386, 10285, 26259, 32751, 27388, 12086, -7617, -24564, -32569, -28689, -14314, 5314, 23007, 32258, 29642, 16096, -3404, -21659, -31904, -30317, -17460, 1905, 20575, 31573, 30768, 18435, -826, -19790, -31318, -31043, -19043, 169, 19331, 31171, 31169, 19301, 63, -19211, -31151, -31163, -19215, 126, 19433, 31261, 31023, 18785, -739, -19991, -31486, -30733, -17997, 1775, 20867, 31799, 30261, 16832, -3231, -22035, -32152, -29563, -15263, 5099, 23451, 32485, 28579, 13263, -7364, -25058, -32716, -27240, -10803, 9996, 26777, 32749, 25470, 7862, -12949, -28510, -32472, -23192, -4433, 16152, 30134, 31759, 20333, 530, -19504, -31500, -30479, -16835, 3800, 22871, 32440, 28499, 12663, -8474, -26080, -32765, -25699, -7823, 13358, 28921, 32279, 21986, 2372, -18260, -31148, -30790, -17310, 3567, 22933, 32495, 28131, 11686, -9794, -27071, -32684, -24184, -5216, 16023, 30325, 31460, 18906, -1894, -21882, -32318, -28615, -12365, 9323, 26926, 32686, 24036, 4766, -16624, -30665, -31113, -17742, 3530, 23243, 32599, 27396, 9931, -11995, -28552, -32289, -21495, -1007, 19948, 31900, 29420, 13600, -8403, -26600, -32698, -23890, -4168, 17471, 31124, 30513, 15888, -6053, -25220, -32767, -25184, -5947, 16055, 30625, 30976, 16919, -5029, -24645, -32759, -25552, -6368, 15814, 30580, 30967, 16763, -5358, -24962, -32767, -25049, -5440, 16764, 31006, 30481, 15411, -7033, -26125, -32709, -23601, -3146, 18835, 31753, 29356, 12771, -10003, -27945, -32336, -21017, 535, 21840, 32500, 27286, 8716, -14135, -30064, -31231, -17031, 5567, 25434, 32745, 23860, 3149, -19136, -31928, -28844, -11389, 11758, 29045, 31813, 18648, -3877, -24470, -32767, -24566, -3971, 18640, 31839, 28923, 11339, -12013, -29270, -31635, -17873, 5021, 25362, 32731, 23328, 1944, -20450, -32333, -27559, -8562, 14871, 30623, 30517, 14578, -8943, -27826, -32224, -19817, 2947, 24183, 32767, 24172, 2880, -19938, -32272, -27599, -8355, 15316, 30895, 30108, 13342, -10522, -28801, -31746, -17755, 5727, 26160, 32592, 21548, -1072, -23130, -32746, -24712, -3334, 19858, 32315, 27265, 7416, -16473, -31413, -29248, -11126, 13082, 30149, 30715, 14438, -9774, -28626, -31731, -17347, 6618, 26939, 32365, 19862, -3666, -25171, -32687, -22004, 954, 23393, 32765, 23801, 1492, -21666, -32662, -25287, -3662, 20040, 32436, 26496, 5549, -18554, -32138, -27461, -7153, 17242, 31812, 28216, 8477, -16126, -31496, -28788, -9528, 15226, 31218, 29202, 10311, -14555, -31003, -29478, -10833, 14120, 30866, 29628, 11097, -13928, -30817, -29661, -11105, 13981, 30860, 29578, 10858, -14279, -30991, -29374, -10354, 14817, 31202, 29041, 9588, -15589, -31476, -28561, -8555, 16585, 31791, 27912, 7249, -17788, -32117, -27070, -5664, 19179, 32418, 26003, 3796, -20730, -32651, -24679, -1645, 22405, 32763, 23062, -784, -24161, -32699, -21119, 3478, 25943, 32395, 18819, -6415, -27685, -31784, -16135, 9559, 29312, 30795, 13052, -12859, -30735, -29360, -9565, 16247, 31855, 27414, 5689, -19636, -32566, -24900, -1459, 22919, 32757, 21778, -3066, -25969, -32316, -18027, 7796, 28641, 31138, 13654, -12610, -30776, -29131, -8702, 17353, 32206, 26228, 3256, -21838, -32764, -22396, 2553, 25851, 32295, 17649, -8544, -29156, -30668, -12056, 14485, 31511, 27795, 5753, -20096, -32679, -23647, 1050, 25063, 32448, 18270, -8071, -29048, -30661, -11802, 14956, 31717, 27233, 4479, -21292, -32761, -22182, 3350, 26634, 31938, 15647, -11243, -30527, -29104, -7910, 18673, 32555, 24251, -606, -25061, -32385, -17536, 9341, 29819};

    /*
    public static final short [] PN = new short [] {};
    public static final short [] GOLD = new short [] {};
    */
    public static final short [] WN = new short [] {5489, -16604, -4421, 7113, -1582, -1570, 21541, -8576, 17845, -16681, 19635, 18976, -2180, 25906, -7240, 29665, -19015, -22223, 12795, -19171, 30880, 8912, -17989, -15807, -28768, -29207, -32183, -22173, 5593, -27123, -28547, 2572, 21358, -9542, 1358, 2071, 23217, 20490, -28451, -17789, -3607, -23432, -4048, 29187, -13172, -26323, -30171, 4333, 30746, 13522, 27758, -6196, -26956, -18018, 23025, 6772, -29545, 15605, 5092, -7169, 23715, 31607, 32050, 19898, -483, -13986, -1476, -2894, 27964, -31444, -31510, -20080, -627, -28795, -18171, -31014, -2393, 16037, 17396, -147, 26609, 13924, -24241, -28313, -8112, -10904, 3868, -25605, 30074, -26111, -8117, -32414, -19493, 21960, 12155, 14375, 787, 4741, -12140, -5208, 29634, 28636, 1592, 15938, -5217, 29112, 13662, 2300, 32566, -18482, -10962, 5834, 18128, 24718, -10777, 16123, -25619, 29428, -18154, -16198, 14574, 18697, -28795, 30642, 1570, 25268, -724, 27624, -11737, -21654, 24919, -3426, 23052, -22856, -28920, -10264, -10030, -28912, -16793, 29323, -27813, 4850, -2123, -28956, -25646, -27630, -8433, 9298, 9587, 13355, 32561, -27990, -2099, -30220, 10240, 13378, -25363, 5484, 27500, 28632, -2993, 31872, 22362, -7254, 24881, 6750, -29882, -6135, 20877, -11166, -2283, 30088, -23317, -32274, 8564, 23274, 6892, -17837, 30584, 8542, -19984, 11807, -22830, -26689, -6998, -28339, 17609, -18086, 26900, -18353, 2214, -10259, -156, -14593, -22886, -13793, -28247, 4102, 2880, -31613, 23740, -5785, -17807, -4037, -23198, 5493, 32253, -26944, 6098, 31141, 26155, -14860, 9595, -24179, 14816, -4124, 2620, -24635, -12409, 1277, 1665, 3967, -13019, -1121, 20227, 623, 21291, -27049, -17945, 17903, -29014, 11997, 24677, -8655, -30810, -10474, 2725, -4346, 16334, -14286, 30021, 27134, 29506, 8644, -19570, 23526, 14695, -30486, -6078, 7451, -3526, 8802, -16187, -23071, -32579, -32183, -10730, -5572, 23456, 7846, 14409, 15002, 17810, -13549, 32344, 30754, 27316, -4231, -11855, 7897, 13244, -23913, 31678, 32400, 17211, -9642, 14100, 18489, 21448, 2470, -20725, -15140, 2858, 9818, 5576, 12194, 20180, 6680, 31855, -19738, 23582, -5506, -7159, -3931, 10376, 422, -31735, 10078, -2645, -15171, 30310, -32342, -22492, 2160, 22951, -21696, -27228, -18889, -19171, -6824, 2005, -29103, 19204, -228, -8727, 7950, -3996, 13188, -29103, -20198, 26054, 3934, -17194, 3601, 30264, -17096, -31930, -4070, -30725, 3023, 6827, -8053, 22620, 15692, 3841, -15759, -23428, -29387, -13568, -6829, 4678, 31776, -14809, 32681, 6296, -1094, 31040, 29644, -3857, -10975, -208, 4961, 30395, 30653, 31697, -4024, 21656, 844, 5329, -2739, -1766, -25372, -7214, -4625, -18096, -8346, -9708, 27808, 9972, -28796, -32760, 28787, 27674, -28920, -3306, -3176, 7639, -19946, 21199, 4901, 6905, -22709, -4531, -11397, 13464, 29263, -1644, 2006, -20721, 30772, 3683, 32279, -7426, -31930, -4172, 16710, -21725, 22196, -15029, -14191, -26959, 4898, -16803, 24615, 28677, 13178, 5692, 5566, 3128, -3274, -3422, 14846, -22477, -19466, -31375, 25282, -15801, -20237, 22183, -23991, 11770, 30647, -31004, 2732, 9466, 15842, 5825, 26473, 27952, 8332, 26713, 12980, -31435, -21458, -3593, -30210, -23226, 12795, 6174, -43, 15578, -13023, -10190, 12275, -30544, -3623, -7199, 13905, -3508, -7608, 8050, -30836, -9324, -3447, 18436, -11624, 30640, -7783, -31948, -3640, 7526, -26860, -17954, 24063, -6825, -18660, 6449, 8583, 26185, 9495, -615, -25300, -24220, -27412, 27163, 12733, 2655, 6674, -19103, 26067, 3979, 660, -25481, 28519, -27069, -20886, 7086, -26851, -20147, -29175, 23198, 20302, 18055, -2178, 12645, -16085, 13091, 24701, 8774, -5726, -2524, -31559, -28905, -25968, 11936, 17590, -20029, -29389, 4244, 5860, 28193, -26699, -17326, 26866, 31952, 10222, -4764, 22727, -8275, -15560, -24820, 32468, -11653, 7381, -12111, 6580, 1635, -3540, -24920, 23201, -5169, -29603, 4710, -26081, -22558, 1673, 18590, 16228, 26469, -18231, -6732, -23516, -17760, -8676, -17205, 5124, 2033, -10934, -17671, -3909, -28045, -3289, 7935, -20688, 30154, -4644, 25528, 14557, 32549, 25581, -15098, -13019, 17936, 12317, -23789, -13815, -32293, -17962, -16812, 29707, -29828, 20959, 19930, -12749, -9617, -4679, 21356, 10440, -22188, 21825, 24467, -24501, -26008, 12554, -29101, -7833, -14573, -1985, 29548, 221, 13072, 18887, -23747, -12005, 28357, 14953, 24406, -26842, -11400, -19896, -2595, -19197, -23235, 19887, -2230, 30036, 26691, -11011, -2174, 26786, -19567, 12674, -12125, 14471, -8248, 15540, -28558, 10584, -3174, 1599, 21397, 31602, -418, 7586, -7123, -4396, -11653, 10602, 10619, 1149, -3080, -2521, -1063, 29957, 32470, -15564, 18220, 28188, -19569, 32399, 18839, 1885, 10874, -24559, -23144, 20495, 2796, 23876, -23567, -27732, -20942, -19149, 5196, 22022, -30129, -19358, 2073, 2795, 32178, 32496, -15485, -12795, -12238, 8816, -16429, -660, -8736, -30212, -6568, 7543, 10251, -19267, 18846, -14743, -49, -23489, -1559, 30701, -15821, -2585, 10444, -5247, -11233, 22246, 1827, 30376, 31059, -25618, 9014, 22424, 20495, -1712, -17048, -25389, -18839, 17422, -10314, -22057, -3196, -14938, 522, 26470, -3708, 21380, -31411, -29746, 10064, 22817, -11125, 19252, -16298, -9481, 29492, -1123, -21683, 30769, 20501, 8556, -26486, 19417, 17761, -6505, -22493, -17072, -8261, -10341, -16592, -15097, -17955, -31025, -26784, -27137, 28779, 6561, 10895, 17535, 11376, 5119, -444, -14920, 9863, -7724, -18890, -32012, 30494, 7613, 18248, -2995, -4189, 25794, 10991, -29320, 11762, 32731, -22640, 9837, -4987, -10295, 32622, -78, 18939, -8627, 18343, -20390, -13238, 7579, -17721, -57, 6796, -31448, -15142, 13084, -1144, 1784, 29354, 8183, 25895, 25542, 1236, -29763, -15459, 26490, -9632, -11700, 23320, 1906, -27751, 32613, -22437, -10532, -20751, 30018, 27472, 28548, -6202, -16217, 25028, -18227, -3633, -8480, -7566, -20206, -15791, 29790, -8682, -32626, 31427, -25175, -13096, -29828, 4917, -9225, 8225, 13187, 25374, -21854, -31707, 32032, 28917, -8910, 16506, -31373, 24331, 15473, 12284, 6205, 10751, 2970, 4876, 26572, -29962, -12562, 15078, -4537, 15939, -23989, 32576, 3283, 15261, 449, 4905, -28642, 27512, 10556, -18845, 11209, 18987, -27215, 1422, 7553, 15420, 4943, -24793, -10583, 2839, -8110, 12579, 29703, 32306, 16983, 3580, -26692, 29385, 10733, 22326, 31028, -21417, 27538, 21987, -14051, 449, 11570, -16594, 13490, -24369, -27851, 2520, 11679, 12835, -26865, -10659, 20749, 7160, -19534, 28263, -22223, -11034, -32767, 29622, -457, 31353, 2975, 10011, -14194, 23521, -25402, 12775, -5786, -12977, -21062, 16672, -5981, 16162, 25042, 6597, 627, 9157, -16731, -26734, 27587, -25032, -21700, 22857, 12133, 27803, 8898, 2859, 24050, -9425, 12496, 10809, -21999, 30762, -1027, -16962, -633, 24134, 20533, -11912, 28616, 9286, 862, -23681, 8189, -24849, 22558, 3445, 16976, 14436, -22960, 10149, 3161, -29904, -15083, 2770, -15801, -2442, -548, 9993, -8718, -4183, -5112, 17466, 30148, 13559, 17119, 18714, -25097, 23321, 12683, 32273, 24941, 24553, 29998, -10033, -10207, 25224, 226, 20829, 22547, 6919, 25449, -25430, 23686, -19517, -4095, 32112, 10652, -20391, 31488, 3308, -3534, 12078, 971, 16954, 14386, 9627, -27017, 5775, -14086, -13800, -2693, -29429, -28518, 31208, 25045, 22339, 26476, -8294, 14382, 31700, -32221, -3128, -13504, 7426, -3701, 24982, -8113, 14170, -1764, -14891, 12025, -11292, 24173, 15368, 5837, 12089, 23703, -29469, -29707, 26335, -28078, -8256, -25351, 12625, 27907, -14317, 4775, -6977, -2960, 25338, 24462, 28057, -9428, 23412, -29058, -27960, 24285, 23998, 9366, 9547, -9747, -28416, -11641, 30167, 20668, -1581, 31069, -18248, -19362, -23659, 6146, -14489, 3915, 8389, 1453, 24068, 3393, 31857, 17248, 14817, 27725, 24485, -18557, 11101, -28228, -26746, 28525, 7519, 13365, 30319, 20406, 11943, -9834, 18826, 2904, -17162, -28796, 12503, 27828, -23096, 14886, -2615, -15159, 18342, 3370, 11681, 15256, -10700, -24180, -27277, 18766, 1206, 18813, 27250, 20066, -25131, 30354, -31687, -26890, 26490, 9294, -11918};

    public short [] sound = CHIRPFORWARD;

    int buffsize, spaceCounter;
    final static String TAG = "Player";
    public AudioTrack audioTrack;
    boolean isRunning = false, silenceOverride = false;
    int chirpPlayCount = 0, MAXCHIRPS = 100000;
    MainActivity myActivity;

    int SPACE = (int)(44100*0.1);

    public Player(MainActivity myActivity) {
        spaceCounter = SPACE;
        this.myActivity = myActivity;
        AudioManager am = (AudioManager) myActivity.getSystemService(Context.AUDIO_SERVICE);
        am.setStreamVolume(am.STREAM_MUSIC, am.getStreamMaxVolume(am.STREAM_MUSIC), 0);
    }

    public void changeSound (final short [] newSound) {
        sound = newSound;
        myActivity.runOnUiThread(new Runnable () {
            @Override
            public void run () {
                Toast.makeText(myActivity, "Changed sound to " + newSound.hashCode(), Toast.LENGTH_LONG).show();
            }
        });
    }

    public void setSpace (int new_space) { SPACE = new_space; }
    public int getSpace () { return SPACE; }
    public void turnOffSound (boolean value) {
        silenceOverride = value;
    }
    public void chirp () { silenceOverride = false; }
    public void stopChirp () { silenceOverride = true; }
    public boolean isSoundOn () { return !silenceOverride; }
    public void setSoftwareVolume (double softwareVolume) {
        AudioManager am = (AudioManager) myActivity.getSystemService(Context.AUDIO_SERVICE);
        int maxVol = am.getStreamMaxVolume(am.STREAM_MUSIC);
        int setVolume = (int) (((float)maxVol) * softwareVolume);
        am.setStreamVolume(am.STREAM_MUSIC, setVolume, 0);
    }


    public void startPlaying () {
        // Set up audiotrack, start playing on loop until time to stop

        buffsize = AudioTrack.getMinBufferSize(44100, AudioFormat.CHANNEL_OUT_MONO, AudioFormat.ENCODING_PCM_16BIT);
        audioTrack = new AudioTrack(AudioManager.STREAM_MUSIC, 44100, AudioFormat.CHANNEL_OUT_MONO, AudioFormat.ENCODING_PCM_16BIT, buffsize, AudioTrack.MODE_STREAM);
        audioTrack.play();
        isRunning = true;

        new Thread(new Runnable() {
            @Override
            public void run() {
                android.os.Process.setThreadPriority(android.os.Process.THREAD_PRIORITY_URGENT_AUDIO);
                playLoop();
            }
        }).start();
    }

    public void stopPlaying() {
        isRunning = false;
        if (audioTrack != null) {
            audioTrack.stop();
            audioTrack.release();
        }
    }

    public void playLoop() {
        short samples [] = new short[buffsize];
        int chirpCount = 0, chirpPlayCount = 0;
        boolean inChirp = true; short sample;

        while (isRunning) {
            long start = System.nanoTime();

            for (int i = 0; i < buffsize; i++) {
                if (inChirp) {
                    if (silenceOverride) samples[i] = 0;
                    else samples[i] = sound[chirpCount];

                    chirpCount++; // Always increment, so it stays in sync

                    if (chirpCount >= sound.length) { // The last one, next would overflow
                        chirpPlayCount ++;
                        inChirp = false;
                        chirpCount = 0;
                    }
                } else {
                    spaceCounter--;
                    samples[i] = 0;

                    if (spaceCounter <= 0) {
                        if (chirpPlayCount < MAXCHIRPS)  inChirp = true;
                        spaceCounter = SPACE;
                    }
                }
            }

            long end = System.nanoTime();
            double elapsed_in_millis = (end - start)/1000000.0;
            Log.v(TAG, "Took " + elapsed_in_millis + " to fill a " + ((double)buffsize)/44100.0*1000 + " milli buffer (size=" + buffsize + ")");

            audioTrack.write(samples, 0, buffsize);
        }
    }
}
